{"version":3,"sources":["skylark-utils-templating-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","templating","helpers","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","key","allKeys","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","target","deep","safe","undefined","_parseMixinArgs","params","slice","shift","sources","mixin","this","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","compact","array","filter","each","callback","undef","flatten","j","inArray","makeArray","offset","startWith","concat","elements","uniq","first","n","arrays","objects","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","inherit","klass","Evented","on","events","selector","data","ctx","one","self","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hash","reverse","templater","last","inverse","express","delimiter","js","expression","func","eval","js_compare","condition","partialName","p","_partials","template","compiled","compile","hashName","root","unless","context","eachHelper","ifHelper","joinHelper","jsHelper","jsCompareHelper","partialHelper","unlessHelper","withHelper","helperToSlices","string","shiftIndex","helperParts","replace","slices","part","match","hashParts","hashContent","stringToBlocks","blocks","_blocks","block","content","contextName","helperSlices","helperName","isPartial","helperContext","helperHash","helperContent","elseContent","toSkip","foundClosed","foundElse","depth","inverseContent","Templater","_options","_helpers","if","with","_cache","getCompileFn","getCompileInverse","getCompileVar","variable","levelsUp","newDepth","isFinite","getCompiledArguments","contextArray","arr","t","resultString","compiledArguments","JSON","stringify","render","registerHelper","unregisterHelper","registerPartial","unregisterPartial","defaultTemplater","main"],"mappings":"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","file":"../skylark-utils-templating-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-templating/templating',[\r\n  \"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.templating = {\r\n\t\thelpers : {}\r\n\t};\r\n});\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-utils-templating/helpers/each',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.each =  function (items, options) {\r\n    var ret = '', i = 0;\r\n    if (types.isFunction(items)) { \r\n      items = items.call(this); \r\n    }\r\n    if (types.isArray(items)) {\r\n      if (options.hash.reverse) {\r\n        items = items.reverse();\r\n      }\r\n      for (i = 0; i < items.length; i++) {\r\n        items[i].templater = this.templater;\r\n        ret += options.fn(items[i], {\r\n          first: i === 0, \r\n          last: i === items.length - 1, \r\n          index: i\r\n        });\r\n      }\r\n      if (options.hash.reverse) {\r\n        items = items.reverse();\r\n      }\r\n    } else {\r\n      for (var key in items) {\r\n        i++;\r\n        items[key].templater = this.templater;\r\n        ret += options.fn(items[key], {key: key});\r\n      }\r\n    }\r\n    if (i > 0) {\r\n      return ret;\r\n    } else {\r\n      return options.inverse(this);\r\n    }\r\n  };\r\n});\ndefine('skylark-utils-templating/helpers/if',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.if =  function (express, options) {\r\n      if (types.isFunction(express)) { \r\n      \texpress = express.call(this); \r\n      }\r\n      if (express) {\r\n        return options.fn(this, options.data);\r\n      }  else {\r\n        return options.inverse(this, options.data);\r\n      }\r\n    };\r\n});\ndefine('skylark-utils-templating/helpers/join',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.join =  function (items, options) {\r\n    if (types.isFunction(items)) { \r\n      items = items.call(this); \r\n    }\r\n    return items.join(options.hash.delimiter);\r\n  };\r\n});\ndefine('skylark-utils-templating/helpers/js',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.js =  function (expression, options) {\r\n    var func;\r\n    if (expression.indexOf('return')>=0) {\r\n      func = '(function(){'+expression+'})';\r\n    } else {\r\n      func = '(function(){return ('+expression+')})';\r\n    }\r\n    return eval.call(this, func).call(this);\r\n  };\r\n});\ndefine('skylark-utils-templating/helpers/js_compare',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n  return templating.helpers.js_compare =  function (expression, options) {\r\n    var func;\r\n    if (expression.indexOf('return')>=0) {\r\n      func = '(function(){'+expression+'})';\r\n    } else {\r\n      func = '(function(){return ('+expression+')})';\r\n    }\r\n    var condition = eval.call(this, func).call(this);\r\n    if (condition) {\r\n      return options.fn(this,options.data);\r\n    } else {\r\n      return options.inverse(this,options.data);   \r\n    }\r\n  };\r\n\r\n});\ndefine('skylark-utils-templating/helpers/partial',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.partial =  function (partialName, options) {\r\n    const ctx = this;\r\n    const p = this.templater._partials[partialName];\r\n    if (!p || (p && !p.template)) {\r\n      return '';\r\n    }\r\n    if (!p.compiled) {\r\n      p.compiled = this.templater.compile(p.template);\r\n    }\r\n    Object.keys(options.hash).forEach(function(hashName) {\r\n      ctx[hashName] = options.hash[hashName];\r\n    });\r\n    return p.compiled(ctx, options.data, options.root);\r\n  };\r\n});\ndefine('skylark-utils-templating/helpers/unless',[\r\n  \"skylark-langx/types\",\r\n  \"../templating\"\r\n],function(types,templating){\r\n\r\n  return templating.helpers.unless =  function (express, options) {\r\n    if (types.isFunction(express)) { \r\n      express = express.call(this); \r\n    }\r\n    if (!express) {\r\n      return options.fn(this, options.data);\r\n    } else {\r\n      return options.inverse(this, options.data);\r\n    }\r\n  };\r\n});\ndefine('skylark-utils-templating/helpers/with',[\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n  return templating.helpers.with =  function (context, options) {\r\n    if (types.isFunction(context)) { \r\n      context = context.call(this); \r\n    }\r\n    return options.fn(context);\r\n  };\r\n});\ndefine('skylark-utils-templating/Templater',[\r\n  \"skylark-langx/types\",\r\n  \"skylark-langx/objects\",\r\n  \"skylark-langx/Evented\",\r\n  \"./templating\",\r\n  \"./helpers/each\",\r\n  \"./helpers/if\",\r\n  \"./helpers/join\",\r\n  \"./helpers/js\",\r\n  \"./helpers/js_compare\",\r\n  \"./helpers/partial\",\r\n  \"./helpers/unless\",\r\n  \"./helpers/with\"\r\n],function(\r\n  types, \r\n  objects, \r\n  Evented, \r\n  templating,\r\n  eachHelper, \r\n  ifHelper,\r\n  joinHelper,\r\n  jsHelper,\r\n  jsCompareHelper,\r\n  partialHelper,\r\n  unlessHelper,\r\n  withHelper){\r\n\r\n  \"use strict\";\r\n\r\n  var cache = {};\r\n  function helperToSlices(string) {\r\n    var helperParts = string.replace(/[{}#}]/g, '').split(' ');\r\n    var slices = [];\r\n    var shiftIndex, i, j;\r\n    for (i = 0; i < helperParts.length; i++) {\r\n      var part = helperParts[i];\r\n      if (i === 0) slices.push(part);\r\n      else {\r\n        if (part.indexOf('\"') === 0) {\r\n          // Plain String\r\n          if (part.match(/\"/g).length === 2) {\r\n            // One word string\r\n            slices.push(part);\r\n          }\r\n          else {\r\n            // Find closed Index\r\n            shiftIndex = 0;\r\n            for (j = i + 1; j < helperParts.length; j++) {\r\n              part += ' ' + helperParts[j];\r\n              if (helperParts[j].indexOf('\"') >= 0) {\r\n                shiftIndex = j;\r\n                slices.push(part);\r\n                break;\r\n              }\r\n            }\r\n            if (shiftIndex) i = shiftIndex;\r\n          }\r\n        }\r\n        else {\r\n          if (part.indexOf('=') > 0) {\r\n            // Hash\r\n            var hashParts = part.split('=');\r\n            var hashName = hashParts[0];\r\n            var hashContent = hashParts[1];\r\n            if (hashContent.match(/\"/g).length !== 2) {\r\n              shiftIndex = 0;\r\n              for (j = i + 1; j < helperParts.length; j++) {\r\n                hashContent += ' ' + helperParts[j];\r\n                if (helperParts[j].indexOf('\"') >= 0) {\r\n                  shiftIndex = j;\r\n                  break;\r\n                }\r\n              }\r\n              if (shiftIndex) i = shiftIndex;\r\n            }\r\n            var hash = [hashName, hashContent.replace(/\"/g,'')];\r\n            slices.push(hash);\r\n          }\r\n          else {\r\n            // Plain variable\r\n            slices.push(part);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return slices;\r\n  }\r\n  function stringToBlocks(string) {\r\n    var blocks = [], i, j, k;\r\n    if (!string) return [];\r\n    var _blocks = string.split(/({{[^{^}]*}})/);\r\n    for (i = 0; i < _blocks.length; i++) {\r\n      var block = _blocks[i];\r\n      if (block === '') continue;\r\n      if (block.indexOf('{{') < 0) {\r\n        blocks.push({\r\n          type: 'plain',\r\n          content: block\r\n        });\r\n      } else {\r\n        if (block.indexOf('{/') >= 0) {\r\n          continue;\r\n        }\r\n        if (block.indexOf('{#') < 0 && block.indexOf(' ') < 0 && block.indexOf('else') < 0) {\r\n          // Simple variable\r\n          blocks.push({\r\n            type: 'variable',\r\n            contextName: block.replace(/[{}]/g, '')\r\n          });\r\n          continue;\r\n        }\r\n        // Helpers\r\n        var helperSlices = helperToSlices(block);\r\n        var helperName = helperSlices[0];\r\n        var isPartial = helperName === '>';\r\n        var helperContext = [];\r\n        var helperHash = {};\r\n        for (j = 1; j < helperSlices.length; j++) {\r\n          var slice = helperSlices[j];\r\n          if (types.isArray(slice)) {\r\n            // Hash\r\n            helperHash[slice[0]] = slice[1] === 'false' ? false : slice[1];\r\n          }\r\n          else {\r\n            helperContext.push(slice);\r\n          }\r\n        }\r\n\r\n        if (block.indexOf('{#') >= 0) {\r\n          // Condition/Helper\r\n          var helperStartIndex = i;\r\n          var helperContent = '';\r\n          var elseContent = '';\r\n          var toSkip = 0;\r\n          var shiftIndex;\r\n          var foundClosed = false, foundElse = false, foundClosedElse = false, depth = 0;\r\n          for (j = i + 1; j < _blocks.length; j++) {\r\n            if (_blocks[j].indexOf('{{#') >= 0) {\r\n              depth ++;\r\n            }\r\n            if (_blocks[j].indexOf('{{/') >= 0) {\r\n              depth --;\r\n            }\r\n            if (_blocks[j].indexOf('{{#' + helperName) >= 0) {\r\n              helperContent += _blocks[j];\r\n              if (foundElse) elseContent += _blocks[j];\r\n              toSkip ++;\r\n            }\r\n            else if (_blocks[j].indexOf('{{/' + helperName) >= 0) {\r\n              if (toSkip > 0) {\r\n                toSkip--;\r\n                helperContent += _blocks[j];\r\n                if (foundElse) elseContent += _blocks[j];\r\n              }\r\n              else {\r\n                shiftIndex = j;\r\n                foundClosed = true;\r\n                break;\r\n              }\r\n            }\r\n            else if (_blocks[j].indexOf('else') >= 0 && depth === 0) {\r\n              foundElse = true;\r\n            }\r\n            else {\r\n              if (!foundElse) helperContent += _blocks[j];\r\n              if (foundElse) elseContent += _blocks[j];\r\n            }\r\n\r\n          }\r\n          if (foundClosed) {\r\n            if (shiftIndex) i = shiftIndex;\r\n            blocks.push({\r\n              type: 'helper',\r\n              helperName: helperName,\r\n              contextName: helperContext,\r\n              content: helperContent,\r\n              inverseContent: elseContent,\r\n              hash: helperHash\r\n            });\r\n          }\r\n        } else if (block.indexOf(' ') > 0) {\r\n          if (isPartial) {\r\n            helperName = 'partial';\r\n            if (helperContext[0]) {\r\n              if (helperContext[0].indexOf('[') === 0) {\r\n                helperContext[0] = helperContext[0].replace(/[[\\]]/g, '');\r\n              } else {\r\n                helperContext[0] = helperContext[0].replace(/\"|'/g, '');\r\n              }\r\n            }\r\n          }\r\n\r\n          blocks.push({\r\n            type: 'helper',\r\n            helperName: helperName,\r\n            contextName: helperContext,\r\n            hash: helperHash\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return blocks;\r\n  }\r\n\r\n\r\n  var Templater = Evented.inherit({\r\n    klassName : \"Templater\",\r\n\r\n    init : function(options,helpers) {\r\n      this._options = options || {};\r\n      this._helpers = objects.mixin({\r\n        \"each\" : eachHelper,\r\n        \"if\" : ifHelper,\r\n        \"join\" : joinHelper,\r\n        \"js\" : jsHelper,\r\n        \"js_compare\" : jsCompareHelper,\r\n        \"partial\" : partialHelper,\r\n        \"unless\" : unlessHelper,\r\n        \"with\" : withHelper,\r\n      },helpers);\r\n\r\n      this._partials = {};\r\n      this._cache = {};\r\n\r\n    },\r\n    compile : function(template) {\r\n      var templater = this;\r\n\r\n      function getCompileFn(block, depth) {\r\n        if (block.content) return compile(block.content, depth);\r\n        else return function () {return ''; };\r\n      }\r\n      function getCompileInverse(block, depth) {\r\n        if (block.inverseContent) return compile(block.inverseContent, depth);\r\n        else return function () {return ''; };\r\n      }\r\n      function getCompileVar(name, ctx) {\r\n        var variable, parts, levelsUp = 0, initialCtx = ctx;\r\n        if (name.indexOf('../') === 0) {\r\n          levelsUp = name.split('../').length - 1;\r\n          var newDepth = ctx.split('_')[1] - levelsUp;\r\n          ctx = 'ctx_' + (newDepth >= 1 ? newDepth : 1);\r\n          parts = name.split('../')[levelsUp].split('.');\r\n        }\r\n        else if (name.indexOf('@global') === 0) {\r\n          ctx = '$.Template7.global';\r\n          parts = name.split('@global.')[1].split('.');\r\n        }\r\n        else if (name.indexOf('@root') === 0) {\r\n          ctx = 'ctx_1';\r\n          parts = name.split('@root.')[1].split('.');\r\n        }\r\n        else {\r\n          parts = name.split('.');\r\n        }\r\n        variable = ctx;\r\n        for (var i = 0; i < parts.length; i++) {\r\n          var part = parts[i];\r\n          if (part.indexOf('@') === 0) {\r\n            if (i > 0) {\r\n              variable += '[(data && data.' + part.replace('@', '') + ')]';\r\n            }\r\n            else {\r\n              variable = '(data && data.' + name.replace('@', '') + ')';\r\n            }\r\n          }\r\n          else {\r\n            if (isFinite(part)) {\r\n              variable += '[' + part + ']';\r\n            }\r\n            else {\r\n              if (part.indexOf('this') === 0) {\r\n                variable = part.replace('this', ctx);\r\n              }\r\n              else {\r\n                variable += '.' + part;       \r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return variable;\r\n      }\r\n      function getCompiledArguments(contextArray, ctx) {\r\n        var arr = [];\r\n        for (var i = 0; i < contextArray.length; i++) {\r\n          if (contextArray[i].indexOf('\"') === 0) arr.push(contextArray[i]);\r\n          else {\r\n            arr.push(getCompileVar(contextArray[i], ctx));\r\n          }\r\n        }\r\n        return arr.join(', ');\r\n      }\r\n      function compile(template, depth) {\r\n        depth = depth || 1;\r\n        template = template || t.template;\r\n        if (typeof template !== 'string') {\r\n          throw new Error('Template7: Template must be a string');\r\n        }\r\n        var blocks = stringToBlocks(template);\r\n        if (blocks.length === 0) {\r\n          return function () { return ''; };\r\n        }\r\n        var ctx = 'ctx_' + depth;\r\n        var resultString = '(function (' + ctx + ', data) {\\n';\r\n        if (depth === 1) {\r\n          resultString += ctx + '.templater = this\\n';\r\n          resultString += 'function isArray(arr){return Object.prototype.toString.apply(arr) === \\'[object Array]\\';}\\n';\r\n          resultString += 'function isFunction(func){return (typeof func === \\'function\\');}\\n';\r\n          resultString += 'function c(val, ctx) {if (typeof val !== \"undefined\") {if (isFunction(val)) {return val.call(ctx);} else return val;} else return \"\";}\\n';\r\n        }\r\n        resultString += 'var r = \\'\\';\\n';\r\n        var i, j, context;\r\n        for (i = 0; i < blocks.length; i++) {\r\n          var block = blocks[i];\r\n          // Plain block\r\n          if (block.type === 'plain') {\r\n            resultString += 'r +=\\'' + (block.content).replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/'/g, '\\\\' + '\\'') + '\\';';\r\n            continue;\r\n          }\r\n          var variable, compiledArguments;\r\n          // Variable block\r\n          if (block.type === 'variable') {\r\n            variable = getCompileVar(block.contextName, ctx);\r\n            resultString += 'r += c(' + variable + ', ' + ctx + ');';\r\n          }\r\n          // Helpers block\r\n          if (block.type === 'helper') {\r\n            if (block.helperName in templater._helpers) {\r\n              compiledArguments = getCompiledArguments(block.contextName, ctx);\r\n              resultString += 'r += '+ ctx + '.templater._helpers.' + block.helperName + '.call(' + ctx + ', '  + (compiledArguments && (compiledArguments + ', ')) +'{hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n            }\r\n            else {\r\n              if (block.contextName.length > 0) {\r\n                throw new Error('Missing helper: \"' + block.helperName + '\"');\r\n              } else {\r\n                variable = getCompileVar(block.helperName, ctx);\r\n                resultString += 'if (' + variable + ') {';\r\n                resultString += 'if (isArray(' + variable + ')) {';\r\n                resultString += 'r += '+ ctx + '.templater._helpers.each.call(' + ctx + ', '  + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n                resultString += '}else {';\r\n                resultString += 'r += '+ ctx + '.templater._helpers.with.call(' + ctx + ', '  + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n                resultString += '}}';\r\n              }\r\n            }\r\n          }\r\n        }\r\n        resultString += '\\nreturn r;})';\r\n        return eval.call(window, resultString);\r\n      }\r\n\r\n      var compiled = this._cache[template];\r\n      if (!compiled) {\r\n        var fn = compile(template);\r\n        compiled = this._cache[template] = function(){\r\n          return fn.apply(templater,arguments);\r\n        };\r\n      }\r\n      return compiled;\r\n    },\r\n\r\n    render : function(template,data) {\r\n      var compiled = this.compile(template);\r\n      return compiled(data);\r\n    },\r\n\r\n    registerHelper : function (name, fn) {\r\n      this._helpers[name] = fn;\r\n    },\r\n    \r\n    unregisterHelper : function (name) {\r\n      this._helpers[name] = undefined;  \r\n      delete this._helpers[name];\r\n    },\r\n\r\n    registerPartial : function (name, template) {\r\n      this._partials[name] = { \r\n        \"template\" : template \r\n      };\r\n    },\r\n\r\n    unregisterPartial : function (name) {\r\n      if (this._partials[name]) {\r\n        this._partials[name] = undefined;\r\n        delete this._partials[name];\r\n      }\r\n    }\r\n\r\n\r\n  });\r\n\r\n  var defaultTemplater = Templater.defaultTemplater = new Templater();\r\n\r\n  [\r\n    \"registerHelper\",\r\n    \"registerPartial\",\r\n    \"unregisterHelper\",\r\n    \"unregisterPartial\",\r\n    \"render\",\r\n    \"compile\"\r\n  ].forEach(function(fn){\r\n    templating[fn] = function() {\r\n      return Templater.prototype[fn].apply(defaultTemplater,arguments);\r\n    }\r\n  });\r\n\r\n  return templating.Templater = Templater;\r\n});\r\n\r\n\ndefine('skylark-utils-templating/main',[\r\n   \t\"./templating\",\r\n   \t\"./Templater\"\r\n],function(templating){\r\n\treturn templating;\r\n});\ndefine('skylark-utils-templating', ['skylark-utils-templating/main'], function (main) { return main; });\n\n"]}