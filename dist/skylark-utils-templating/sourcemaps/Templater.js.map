{"version":3,"sources":["Templater.js"],"names":["define","types","objects","Evented","templating","eachHelper","ifHelper","joinHelper","jsHelper","jsCompareHelper","partialHelper","unlessHelper","withHelper","helperToSlices","string","shiftIndex","i","j","helperParts","replace","split","slices","length","part","push","indexOf","match","hashParts","hashName","hashContent","hash","stringToBlocks","blocks","_blocks","block","type","content","contextName","helperSlices","helperName","isPartial","helperContext","helperHash","slice","isArray","helperContent","elseContent","toSkip","foundClosed","foundElse","depth","inverseContent","Templater","inherit","klassName","init","options","helpers","this","_options","_helpers","mixin","each","if","join","js","js_compare","partial","unless","with","_partials","_cache","compile","template","getCompileFn","getCompileInverse","getCompileVar","name","ctx","variable","parts","levelsUp","newDepth","isFinite","getCompiledArguments","contextArray","arr","t","Error","resultString","compiledArguments","templater","JSON","stringify","eval","call","window","compiled","fn","apply","arguments","render","data","registerHelper","unregisterHelper","undefined","registerPartial","unregisterPartial","defaultTemplater","forEach","prototype"],"mappings":"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","file":"../Templater.js","sourcesContent":["define([\r\n  \"skylark-langx/types\",\r\n  \"skylark-langx/objects\",\r\n  \"skylark-langx/Evented\",\r\n  \"./templating\",\r\n  \"./helpers/each\",\r\n  \"./helpers/if\",\r\n  \"./helpers/join\",\r\n  \"./helpers/js\",\r\n  \"./helpers/js_compare\",\r\n  \"./helpers/partial\",\r\n  \"./helpers/unless\",\r\n  \"./helpers/with\"\r\n],function(\r\n  types, \r\n  objects, \r\n  Evented, \r\n  templating,\r\n  eachHelper, \r\n  ifHelper,\r\n  joinHelper,\r\n  jsHelper,\r\n  jsCompareHelper,\r\n  partialHelper,\r\n  unlessHelper,\r\n  withHelper){\r\n\r\n  \"use strict\";\r\n\r\n  var cache = {};\r\n  function helperToSlices(string) {\r\n    var helperParts = string.replace(/[{}#}]/g, '').split(' ');\r\n    var slices = [];\r\n    var shiftIndex, i, j;\r\n    for (i = 0; i < helperParts.length; i++) {\r\n      var part = helperParts[i];\r\n      if (i === 0) slices.push(part);\r\n      else {\r\n        if (part.indexOf('\"') === 0) {\r\n          // Plain String\r\n          if (part.match(/\"/g).length === 2) {\r\n            // One word string\r\n            slices.push(part);\r\n          }\r\n          else {\r\n            // Find closed Index\r\n            shiftIndex = 0;\r\n            for (j = i + 1; j < helperParts.length; j++) {\r\n              part += ' ' + helperParts[j];\r\n              if (helperParts[j].indexOf('\"') >= 0) {\r\n                shiftIndex = j;\r\n                slices.push(part);\r\n                break;\r\n              }\r\n            }\r\n            if (shiftIndex) i = shiftIndex;\r\n          }\r\n        }\r\n        else {\r\n          if (part.indexOf('=') > 0) {\r\n            // Hash\r\n            var hashParts = part.split('=');\r\n            var hashName = hashParts[0];\r\n            var hashContent = hashParts[1];\r\n            if (hashContent.match(/\"/g).length !== 2) {\r\n              shiftIndex = 0;\r\n              for (j = i + 1; j < helperParts.length; j++) {\r\n                hashContent += ' ' + helperParts[j];\r\n                if (helperParts[j].indexOf('\"') >= 0) {\r\n                  shiftIndex = j;\r\n                  break;\r\n                }\r\n              }\r\n              if (shiftIndex) i = shiftIndex;\r\n            }\r\n            var hash = [hashName, hashContent.replace(/\"/g,'')];\r\n            slices.push(hash);\r\n          }\r\n          else {\r\n            // Plain variable\r\n            slices.push(part);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return slices;\r\n  }\r\n  function stringToBlocks(string) {\r\n    var blocks = [], i, j, k;\r\n    if (!string) return [];\r\n    var _blocks = string.split(/({{[^{^}]*}})/);\r\n    for (i = 0; i < _blocks.length; i++) {\r\n      var block = _blocks[i];\r\n      if (block === '') continue;\r\n      if (block.indexOf('{{') < 0) {\r\n        blocks.push({\r\n          type: 'plain',\r\n          content: block\r\n        });\r\n      } else {\r\n        if (block.indexOf('{/') >= 0) {\r\n          continue;\r\n        }\r\n        if (block.indexOf('{#') < 0 && block.indexOf(' ') < 0 && block.indexOf('else') < 0) {\r\n          // Simple variable\r\n          blocks.push({\r\n            type: 'variable',\r\n            contextName: block.replace(/[{}]/g, '')\r\n          });\r\n          continue;\r\n        }\r\n        // Helpers\r\n        var helperSlices = helperToSlices(block);\r\n        var helperName = helperSlices[0];\r\n        var isPartial = helperName === '>';\r\n        var helperContext = [];\r\n        var helperHash = {};\r\n        for (j = 1; j < helperSlices.length; j++) {\r\n          var slice = helperSlices[j];\r\n          if (types.isArray(slice)) {\r\n            // Hash\r\n            helperHash[slice[0]] = slice[1] === 'false' ? false : slice[1];\r\n          }\r\n          else {\r\n            helperContext.push(slice);\r\n          }\r\n        }\r\n\r\n        if (block.indexOf('{#') >= 0) {\r\n          // Condition/Helper\r\n          var helperStartIndex = i;\r\n          var helperContent = '';\r\n          var elseContent = '';\r\n          var toSkip = 0;\r\n          var shiftIndex;\r\n          var foundClosed = false, foundElse = false, foundClosedElse = false, depth = 0;\r\n          for (j = i + 1; j < _blocks.length; j++) {\r\n            if (_blocks[j].indexOf('{{#') >= 0) {\r\n              depth ++;\r\n            }\r\n            if (_blocks[j].indexOf('{{/') >= 0) {\r\n              depth --;\r\n            }\r\n            if (_blocks[j].indexOf('{{#' + helperName) >= 0) {\r\n              helperContent += _blocks[j];\r\n              if (foundElse) elseContent += _blocks[j];\r\n              toSkip ++;\r\n            }\r\n            else if (_blocks[j].indexOf('{{/' + helperName) >= 0) {\r\n              if (toSkip > 0) {\r\n                toSkip--;\r\n                helperContent += _blocks[j];\r\n                if (foundElse) elseContent += _blocks[j];\r\n              }\r\n              else {\r\n                shiftIndex = j;\r\n                foundClosed = true;\r\n                break;\r\n              }\r\n            }\r\n            else if (_blocks[j].indexOf('else') >= 0 && depth === 0) {\r\n              foundElse = true;\r\n            }\r\n            else {\r\n              if (!foundElse) helperContent += _blocks[j];\r\n              if (foundElse) elseContent += _blocks[j];\r\n            }\r\n\r\n          }\r\n          if (foundClosed) {\r\n            if (shiftIndex) i = shiftIndex;\r\n            blocks.push({\r\n              type: 'helper',\r\n              helperName: helperName,\r\n              contextName: helperContext,\r\n              content: helperContent,\r\n              inverseContent: elseContent,\r\n              hash: helperHash\r\n            });\r\n          }\r\n        } else if (block.indexOf(' ') > 0) {\r\n          if (isPartial) {\r\n            helperName = 'partial';\r\n            if (helperContext[0]) {\r\n              if (helperContext[0].indexOf('[') === 0) {\r\n                helperContext[0] = helperContext[0].replace(/[[\\]]/g, '');\r\n              } else {\r\n                helperContext[0] = helperContext[0].replace(/\"|'/g, '');\r\n              }\r\n            }\r\n          }\r\n\r\n          blocks.push({\r\n            type: 'helper',\r\n            helperName: helperName,\r\n            contextName: helperContext,\r\n            hash: helperHash\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return blocks;\r\n  }\r\n\r\n\r\n  var Templater = Evented.inherit({\r\n    klassName : \"Templater\",\r\n\r\n    init : function(options,helpers) {\r\n      this._options = options || {};\r\n      this._helpers = objects.mixin({\r\n        \"each\" : eachHelper,\r\n        \"if\" : ifHelper,\r\n        \"join\" : joinHelper,\r\n        \"js\" : jsHelper,\r\n        \"js_compare\" : jsCompareHelper,\r\n        \"partial\" : partialHelper,\r\n        \"unless\" : unlessHelper,\r\n        \"with\" : withHelper,\r\n      },helpers);\r\n\r\n      this._partials = {};\r\n      this._cache = {};\r\n\r\n    },\r\n    compile : function(template) {\r\n      var templater = this;\r\n\r\n      function getCompileFn(block, depth) {\r\n        if (block.content) return compile(block.content, depth);\r\n        else return function () {return ''; };\r\n      }\r\n      function getCompileInverse(block, depth) {\r\n        if (block.inverseContent) return compile(block.inverseContent, depth);\r\n        else return function () {return ''; };\r\n      }\r\n      function getCompileVar(name, ctx) {\r\n        var variable, parts, levelsUp = 0, initialCtx = ctx;\r\n        if (name.indexOf('../') === 0) {\r\n          levelsUp = name.split('../').length - 1;\r\n          var newDepth = ctx.split('_')[1] - levelsUp;\r\n          ctx = 'ctx_' + (newDepth >= 1 ? newDepth : 1);\r\n          parts = name.split('../')[levelsUp].split('.');\r\n        }\r\n        else if (name.indexOf('@global') === 0) {\r\n          ctx = '$.Template7.global';\r\n          parts = name.split('@global.')[1].split('.');\r\n        }\r\n        else if (name.indexOf('@root') === 0) {\r\n          ctx = 'ctx_1';\r\n          parts = name.split('@root.')[1].split('.');\r\n        }\r\n        else {\r\n          parts = name.split('.');\r\n        }\r\n        variable = ctx;\r\n        for (var i = 0; i < parts.length; i++) {\r\n          var part = parts[i];\r\n          if (part.indexOf('@') === 0) {\r\n            if (i > 0) {\r\n              variable += '[(data && data.' + part.replace('@', '') + ')]';\r\n            }\r\n            else {\r\n              variable = '(data && data.' + name.replace('@', '') + ')';\r\n            }\r\n          }\r\n          else {\r\n            if (isFinite(part)) {\r\n              variable += '[' + part + ']';\r\n            }\r\n            else {\r\n              if (part.indexOf('this') === 0) {\r\n                variable = part.replace('this', ctx);\r\n              }\r\n              else {\r\n                variable += '.' + part;       \r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return variable;\r\n      }\r\n      function getCompiledArguments(contextArray, ctx) {\r\n        var arr = [];\r\n        for (var i = 0; i < contextArray.length; i++) {\r\n          if (contextArray[i].indexOf('\"') === 0) arr.push(contextArray[i]);\r\n          else {\r\n            arr.push(getCompileVar(contextArray[i], ctx));\r\n          }\r\n        }\r\n        return arr.join(', ');\r\n      }\r\n      function compile(template, depth) {\r\n        depth = depth || 1;\r\n        template = template || t.template;\r\n        if (typeof template !== 'string') {\r\n          throw new Error('Template7: Template must be a string');\r\n        }\r\n        var blocks = stringToBlocks(template);\r\n        if (blocks.length === 0) {\r\n          return function () { return ''; };\r\n        }\r\n        var ctx = 'ctx_' + depth;\r\n        var resultString = '(function (' + ctx + ', data) {\\n';\r\n        if (depth === 1) {\r\n          resultString += ctx + '.templater = this\\n';\r\n          resultString += 'function isArray(arr){return Object.prototype.toString.apply(arr) === \\'[object Array]\\';}\\n';\r\n          resultString += 'function isFunction(func){return (typeof func === \\'function\\');}\\n';\r\n          resultString += 'function c(val, ctx) {if (typeof val !== \"undefined\") {if (isFunction(val)) {return val.call(ctx);} else return val;} else return \"\";}\\n';\r\n        }\r\n        resultString += 'var r = \\'\\';\\n';\r\n        var i, j, context;\r\n        for (i = 0; i < blocks.length; i++) {\r\n          var block = blocks[i];\r\n          // Plain block\r\n          if (block.type === 'plain') {\r\n            resultString += 'r +=\\'' + (block.content).replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/'/g, '\\\\' + '\\'') + '\\';';\r\n            continue;\r\n          }\r\n          var variable, compiledArguments;\r\n          // Variable block\r\n          if (block.type === 'variable') {\r\n            variable = getCompileVar(block.contextName, ctx);\r\n            resultString += 'r += c(' + variable + ', ' + ctx + ');';\r\n          }\r\n          // Helpers block\r\n          if (block.type === 'helper') {\r\n            if (block.helperName in templater._helpers) {\r\n              compiledArguments = getCompiledArguments(block.contextName, ctx);\r\n              resultString += 'r += '+ ctx + '.templater._helpers.' + block.helperName + '.call(' + ctx + ', '  + (compiledArguments && (compiledArguments + ', ')) +'{hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n            }\r\n            else {\r\n              if (block.contextName.length > 0) {\r\n                throw new Error('Missing helper: \"' + block.helperName + '\"');\r\n              } else {\r\n                variable = getCompileVar(block.helperName, ctx);\r\n                resultString += 'if (' + variable + ') {';\r\n                resultString += 'if (isArray(' + variable + ')) {';\r\n                resultString += 'r += '+ ctx + '.templater._helpers.each.call(' + ctx + ', '  + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n                resultString += '}else {';\r\n                resultString += 'r += '+ ctx + '.templater._helpers.with.call(' + ctx + ', '  + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';\r\n                resultString += '}}';\r\n              }\r\n            }\r\n          }\r\n        }\r\n        resultString += '\\nreturn r;})';\r\n        return eval.call(window, resultString);\r\n      }\r\n\r\n      var compiled = this._cache[template];\r\n      if (!compiled) {\r\n        var fn = compile(template);\r\n        compiled = this._cache[template] = function(){\r\n          return fn.apply(templater,arguments);\r\n        };\r\n      }\r\n      return compiled;\r\n    },\r\n\r\n    render : function(template,data) {\r\n      var compiled = this.compile(template);\r\n      return compiled(data);\r\n    },\r\n\r\n    registerHelper : function (name, fn) {\r\n      this._helpers[name] = fn;\r\n    },\r\n    \r\n    unregisterHelper : function (name) {\r\n      this._helpers[name] = undefined;  \r\n      delete this._helpers[name];\r\n    },\r\n\r\n    registerPartial : function (name, template) {\r\n      this._partials[name] = { \r\n        \"template\" : template \r\n      };\r\n    },\r\n\r\n    unregisterPartial : function (name) {\r\n      if (this._partials[name]) {\r\n        this._partials[name] = undefined;\r\n        delete this._partials[name];\r\n      }\r\n    }\r\n\r\n\r\n  });\r\n\r\n  var defaultTemplater = Templater.defaultTemplater = new Templater();\r\n\r\n  [\r\n    \"registerHelper\",\r\n    \"registerPartial\",\r\n    \"unregisterHelper\",\r\n    \"unregisterPartial\",\r\n    \"render\",\r\n    \"compile\"\r\n  ].forEach(function(fn){\r\n    templating[fn] = function() {\r\n      return Templater.prototype[fn].apply(defaultTemplater,arguments);\r\n    }\r\n  });\r\n\r\n  return templating.Templater = Templater;\r\n});\r\n\r\n"]}