{"version":3,"sources":["helpers/js_compare.js"],"names":["define","types","templating","helpers","js_compare","expression","options","func","indexOf","condition","eval","call","this","fn","data","inverse"],"mappings":";;;;;;;AAAAA,QACC,sBACA,iBACC,SAASC,EAAMC,GAEf,MAAOA,GAAWC,QAAQC,WAAc,SAAUC,EAAYC,GAC5D,GAAIC,EAEFA,GADEF,EAAWG,QAAQ,WAAW,EACzB,eAAeH,EAAW,KAE1B,uBAAuBA,EAAW,KAE3C,IAAII,GAAYC,KAAKC,KAAKC,KAAML,GAAMI,KAAKC,KAC3C,OAAIH,GACKH,EAAQO,GAAGD,KAAKN,EAAQQ,MAExBR,EAAQS,QAAQH,KAAKN,EAAQQ","file":"../../helpers/js_compare.js","sourcesContent":["define([\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n  return templating.helpers.js_compare =  function (expression, options) {\r\n    var func;\r\n    if (expression.indexOf('return')>=0) {\r\n      func = '(function(){'+expression+'})';\r\n    } else {\r\n      func = '(function(){return ('+expression+')})';\r\n    }\r\n    var condition = eval.call(this, func).call(this);\r\n    if (condition) {\r\n      return options.fn(this,options.data);\r\n    } else {\r\n      return options.inverse(this,options.data);   \r\n    }\r\n  };\r\n\r\n});"]}