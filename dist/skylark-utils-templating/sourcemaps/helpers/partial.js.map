{"version":3,"sources":["helpers/partial.js"],"names":["define","types","templating","helpers","partial","partialName","options","ctx","this","p","templater","_partials","template","compiled","compile","Object","keys","hash","forEach","hashName","data","root"],"mappings":";;;;;;;AAAAA,QACC,sBACA,iBACC,SAASC,EAAMC,GAEhB,MAAOA,GAAWC,QAAQC,QAAW,SAAUC,EAAaC,GACzD,KAAMC,GAAMC,KACNC,EAAID,KAAKE,UAAUC,UAAUN,EACnC,QAAKI,GAAMA,IAAMA,EAAEG,SACV,IAEJH,EAAEI,WACLJ,EAAEI,SAAWL,KAAKE,UAAUI,QAAQL,EAAEG,WAExCG,OAAOC,KAAKV,EAAQW,MAAMC,QAAQ,SAASC,GACzCZ,EAAIY,GAAYb,EAAQW,KAAKE,KAExBV,EAAEI,SAASN,EAAKD,EAAQc,KAAMd,EAAQe","file":"../../helpers/partial.js","sourcesContent":["define([\r\n\t\"skylark-langx/types\",\r\n\t\"../templating\"\r\n],function(types,templating){\r\n\r\n\treturn templating.helpers.partial =  function (partialName, options) {\r\n    const ctx = this;\r\n    const p = this.templater._partials[partialName];\r\n    if (!p || (p && !p.template)) {\r\n      return '';\r\n    }\r\n    if (!p.compiled) {\r\n      p.compiled = this.templater.compile(p.template);\r\n    }\r\n    Object.keys(options.hash).forEach(function(hashName) {\r\n      ctx[hashName] = options.hash[hashName];\r\n    });\r\n    return p.compiled(ctx, options.data, options.root);\r\n  };\r\n});"]}